name: Build and Publish
on:
  create

jobs:
  build-and-push-docker-image:
    name: Build and Push Version Tagged Docker Images to GitHub Container Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: Login to Github Packages
        if: ${{ contains(github.ref, 'refs/heads/releases/') }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout code
        if: ${{ contains(github.ref, 'refs/heads/releases/') }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: get-release-branch-version@v1
        if: ${{ contains(github.ref, 'refs/heads/releases/') }}
        uses: valadas/get-release-branch-version@v1
        id: branchVersion

      - name: Extract version into env var
        if: ${{ contains(github.ref, 'refs/heads/releases/') }}
        env:
          MAJOR: ${{ steps.branchVersion.major }}
          MINOR: ${{ steps.branchVersion.minor }}
          PATCH: ${{ steps.branchVersion.patch }}
        run: |
          echo "version=$MAJOR.$MINOR.$PATCH" >> $GITHUB_ENV

      - name: Current Version Name
        if: ${{ contains(github.ref, 'refs/heads/releases/') }}
        run: echo "${{ env.version }}"

      - name: Build and  push sparseml-all
        if: ${{ contains(github.ref, 'refs/heads/releases/') }}
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          build-args: |
            DEPS=all
            VERSION=${{ env.version }}
          push: true
          tags: |
            ghcr.io/neuralmagic/sparseml-all:${{ env.version }}

      - name: Build and push sparseml-torchvision
        if: ${{ contains(github.ref, 'refs/heads/releases/') }}
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          build-args: |
            DEPS=torchvision
            VERSION=${{ env.version }}
          push: true
          tags: |
            ghcr.io/neuralmagic/sparseml-torchvision:${{ env.version }}


      - name: Build and push sparseml-transformers
        if: ${{ contains(github.ref, 'refs/heads/releases/') }}
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          build-args: |
            DEPS=transformers
            VERSION=${{ env.version }}
          tags: |
            ghcr.io/neuralmagic/sparseml-transformers:${{ env.version }}

      - name: Build and push sparseml-ultralytics
        if: ${{ contains(github.ref, 'refs/heads/releases/') }}
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          push: true
          build-args: |
            DEPS=ultralytics
            VERSION=${{ env.version }}
          tags: |
            ghcr.io/neuralmagic/sparseml-torchvision:${{ env.version }}


      - name: Build and push sparseml-yolov5
        if: ${{ contains(github.ref, 'refs/heads/releases/') }}
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          push: true
          build-args: |
            DEPS=yolov5
            VERSION=${{ env.version }}
          tags: |
            ghcr.io/neuralmagic/sparseml-yolov5:${{ env.version }}

      - name: Build and push sparseml-base
        if: ${{ contains(github.ref, 'refs/heads/releases/') }}
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          push: true
          build-args: |
            DEPS=base
            VERSION=${{ env.version }}
          tags: |
            ghcr.io/neuralmagic/sparseml-base:${{ env.version }}

      - name: Image digest
        if: ${{ contains(github.ref, 'refs/heads/releases/') }}
        run: echo ${{ steps.docker_build.outputs.digest }}
